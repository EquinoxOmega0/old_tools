unit batt;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, StdCtrls, Spin, ExtDlgs, math;

type
  TForm6 = class(TForm)
    GroupBox1: TGroupBox;
    Edit1: TEdit;
    Edit2: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    Panel1: TPanel;
    Panel2: TPanel;
    Panel4: TPanel;
    ListBox1: TListBox;
    Panel3: TPanel;
    GroupBox2: TGroupBox;
    Label3: TLabel;
    Label4: TLabel;
    Edit3: TEdit;
    Edit4: TEdit;
    Panel5: TPanel;
    Panel6: TPanel;
    Panel7: TPanel;
    ListBox2: TListBox;
    Panel8: TPanel;
    GroupBox3: TGroupBox;
    Label5: TLabel;
    Label6: TLabel;
    Edit5: TEdit;
    Edit6: TEdit;
    Panel9: TPanel;
    Panel10: TPanel;
    Panel11: TPanel;
    ListBox3: TListBox;
    Panel12: TPanel;
    PaintBox1: TPaintBox;
    Panel13: TPanel;
    Label7: TLabel;
    Panel14: TPanel;
    Panel15: TPanel;
    Panel16: TPanel;
    Panel17: TPanel;
    Panel18: TPanel;
    Panel19: TPanel;
    Panel20: TPanel;
    Panel21: TPanel;
    SpinEdit1: TSpinEdit;
    Label8: TLabel;
    Edit7: TEdit;
    Edit8: TEdit;
    Label9: TLabel;
    Label10: TLabel;
    Label11: TLabel;
    Label12: TLabel;
    Edit9: TEdit;
    Label13: TLabel;
    Edit10: TEdit;
    Label14: TLabel;
    Label15: TLabel;
    Edit11: TEdit;
    Label16: TLabel;
    Edit12: TEdit;
    Label17: TLabel;
    Panel22: TPanel;
    Panel23: TPanel;
    Panel24: TPanel;
    Panel25: TPanel;
    Panel26: TPanel;
    Label18: TLabel;
    Label19: TLabel;
    Label20: TLabel;
    Label21: TLabel;
    CheckBox1: TCheckBox;
    SaveDialog1: TSaveDialog;
    OpenDialog1: TOpenDialog;
    SavePictureDialog1: TSavePictureDialog;
    procedure Panel1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Panel5Click(Sender: TObject);
    procedure Panel9Click(Sender: TObject);
    procedure Panel4Click(Sender: TObject);
    procedure Panel7Click(Sender: TObject);
    procedure Panel11Click(Sender: TObject);
    procedure PaintBox1MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure PaintBox1MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure PaintBox1MouseUp(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Panel13Click(Sender: TObject);
    procedure Panel2Click(Sender: TObject);
    procedure Panel3Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure Panel6Click(Sender: TObject);
    procedure Panel10Click(Sender: TObject);
    procedure Panel8Click(Sender: TObject);
    procedure Panel12Click(Sender: TObject);
    procedure Panel24Click(Sender: TObject);
    procedure Panel23Click(Sender: TObject);
    procedure Panel22Click(Sender: TObject);
    procedure neuewerte;
    procedure Panel26Click(Sender: TObject);
    procedure Ergebnisse;
    procedure Panel14Click(Sender: TObject);
    procedure Panel15Click(Sender: TObject);
    procedure Panel16Click(Sender: TObject);
    procedure Panel17Click(Sender: TObject);
    procedure Panel18Click(Sender: TObject);
    procedure Panel19Click(Sender: TObject);
    procedure Panel20Click(Sender: TObject);
    procedure Panel21Click(Sender: TObject);
    procedure Panel25Click(Sender: TObject);
    procedure CheckBox1Click(Sender: TObject);


  private
    { Private declarations }
  public
    { Public declarations }
  end;

  type messreihe=record
  Spannung,Strom:array of extended;
  counter:integer;           
  end;

  type speicher=record
  reihe:array[1..3] of messreihe;
  Uoanfang,Uoende:array[1..3] of extended;
  end;

  type TRi=record
  R:array of extended;
  sigma,mittel:extended;
  end;

var
  Form6: TForm6;
  datasave:speicher;
  datenreihe:array[1..3,0..250] of extended;
  Rinnen:array[1..3] of TRi;
  diffUo,rish:array[1..3] of extended;
  bild:Tbitmap;
  Rim,Ris:extended;
  mw,sw:array[0..250] of extended;
  relab:extended;


implementation

uses main;

{$R *.dfm}

procedure TForm6.Panel1Click(Sender: TObject);
begin
if (edit1.text<>'') and  (edit2.text<>'')
then
begin                                                                    //daten hinzu
listbox1.items.Add(edit1.Text+' - '+edit2.text);
inc(datasave.reihe[1].counter);
setlength(datasave.reihe[1].Spannung,datasave.reihe[1].counter);
setlength(datasave.reihe[1].Strom,datasave.reihe[1].counter);
datasave.reihe[1].Spannung[datasave.reihe[1].counter-1]:=strtofloat(edit1.text);
datasave.reihe[1].Strom[datasave.reihe[1].counter-1]:=strtofloat(edit2.text);
edit1.Text:='';
edit2.text:='';
end;
end;

procedure TForm6.FormCreate(Sender: TObject);
var i:integer;
begin
datasave.reihe[1].counter:=0;  
datasave.reihe[2].counter:=0;                //Couter Null setzen
datasave.reihe[3].counter:=0;

bild:=TBitmap.create;
bild.width:=500;
bild.height:=300;
bild.canvas.Brush.Color:=clwhite;
bild.canvas.FillRect(rect(0,0,500,300));

for i:=0 to 250 do
begin
mw[i]:=0;
sw[i]:=0;
end;

end;

procedure TForm6.Panel5Click(Sender: TObject);
begin
if (edit3.text<>'') and  (edit4.text<>'')
then
begin
listbox2.items.Add(edit3.Text+' - '+edit4.text);                    //daten hinzu
inc(datasave.reihe[2].counter);
setlength(datasave.reihe[2].Spannung,datasave.reihe[2].counter);
setlength(datasave.reihe[2].Strom,datasave.reihe[2].counter);
datasave.reihe[2].Spannung[datasave.reihe[2].counter-1]:=strtofloat(edit3.text);
datasave.reihe[2].Strom[datasave.reihe[2].counter-1]:=strtofloat(edit4.text);
edit3.Text:='';
edit4.text:='';
end;
end;

procedure TForm6.Panel9Click(Sender: TObject);
begin
if (edit5.text<>'') and  (edit6.text<>'')
then
begin                                                                    //daten hinzu
listbox3.items.Add(edit5.Text+' - '+edit6.text);
inc(datasave.reihe[3].counter);
setlength(datasave.reihe[3].Spannung,datasave.reihe[3].counter);
setlength(datasave.reihe[3].Strom,datasave.reihe[3].counter);
datasave.reihe[3].Spannung[datasave.reihe[3].counter-1]:=strtofloat(edit5.text);
datasave.reihe[3].Strom[datasave.reihe[3].counter-1]:=strtofloat(edit6.text);
edit5.Text:='';
edit6.text:='';
end;
end;

procedure TForm6.Panel4Click(Sender: TObject);
var a,i:integer;
begin
a:=-1;
for i:=0 to listbox1.items.count-1 do
if listbox1.Selected[i]=true                     //daten  löschen
then
a:=i;

if a<>-1
then
begin
listbox1.Items.Delete(a);
for i:=a to datasave.reihe[1].counter-2  do
begin
datasave.reihe[1].Spannung[i]:=datasave.reihe[1].Spannung[i+1];
datasave.reihe[1].Strom[i]:=datasave.reihe[1].Strom[i+1];
end;
dec(datasave.reihe[1].counter);
setlength(datasave.reihe[1].Spannung,datasave.reihe[1].counter);
setlength(datasave.reihe[1].Strom,datasave.reihe[1].counter);
end;
end;

procedure TForm6.Panel7Click(Sender: TObject);
var a,i:integer;
begin
a:=-1;
for i:=0 to listbox2.items.count-1 do
if listbox2.Selected[i]=true                     //daten  löschen
then
a:=i;

if a<>-1
then
begin
listbox2.Items.Delete(a);
for i:=a to datasave.reihe[2].counter-2  do
begin
datasave.reihe[2].Spannung[i]:=datasave.reihe[2].Spannung[i+1];
datasave.reihe[2].Strom[i]:=datasave.reihe[2].Strom[i+1];
end;
dec(datasave.reihe[2].counter);
setlength(datasave.reihe[2].Spannung,datasave.reihe[2].counter);
setlength(datasave.reihe[2].Strom,datasave.reihe[2].counter);
end;
end;

procedure TForm6.Panel11Click(Sender: TObject);
var a,i:integer;
begin
a:=-1;
for i:=0 to listbox3.items.count-1 do
if listbox3.Selected[i]=true                     //daten  löschen
then
a:=i;

if a<>-1
then
begin
listbox3.Items.Delete(a);
for i:=a to datasave.reihe[3].counter-2  do
begin
datasave.reihe[3].Spannung[i]:=datasave.reihe[3].Spannung[i+1];
datasave.reihe[3].Strom[i]:=datasave.reihe[3].Strom[i+1];
end;
dec(datasave.reihe[3].counter);
setlength(datasave.reihe[3].Spannung,datasave.reihe[3].counter);
setlength(datasave.reihe[3].Strom,datasave.reihe[3].counter);
end;
end;

procedure TForm6.PaintBox1MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
paintbox1.Canvas.draw(0,0,bild);           //Graph anzeigen
end;

procedure TForm6.PaintBox1MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
paintbox1.Canvas.draw(0,0,bild);         //Graph anzeigen
end;

procedure TForm6.PaintBox1MouseUp(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
paintbox1.Canvas.draw(0,0,bild);        //Graph anzeigen
end;




procedure TForm6.Panel13Click(Sender: TObject);
var i,e,a,u,eff:integer;
   k:extended;
begin                                    //Berechnen;

datasave.Uoanfang[1]:=strtofloat(edit7.text);
datasave.Uoende[1]:=strtofloat(edit8.text);
datasave.Uoanfang[2]:=strtofloat(edit9.text);
datasave.Uoende[2]:=strtofloat(edit10.text);      //Einlesen
datasave.Uoanfang[3]:=strtofloat(edit11.text);
datasave.Uoende[3]:=strtofloat(edit12.text);


begin

for i:=1 to 3 do
begin
if checkbox1.checked=true       //mit Batterieverbrauch
then
diffUo[i]:=-(datasave.Uoende[i]-datasave.Uoanfang[i])/250
else
diffUo[i]:=0;            //ohne Batterieverbrauch

for e:=0 to 249 do
if datasave.reihe[i].Strom[0]>e+1
then                            //für Ströme kleiner als Messwerte   Null setzen
datenreihe[i,e]:=0
else
begin
u:=0;
for a:=0 to datasave.reihe[i].counter-2 do
if datasave.reihe[i].Strom[a]<e+1
then
begin
u:=a;
end;

                                       //Spannungen für alle Ströme extrapolieren

k:=(datasave.reihe[i].Spannung[u+1]-datasave.reihe[i].Spannung[u])/(datasave.reihe[i].Strom[u+1]-datasave.reihe[i].Strom[u]);

datenreihe[i,e]:=datasave.reihe[i].Spannung[u]+k*(e+1-datasave.reihe[i].Strom[u]);


datenreihe[i,e]:=datenreihe[i,e]*(datasave.Uoanfang[i]+e*diffUo[i])/datasave.Uoanfang[i];


end;


setlength(Rinnen[i].R,datasave.reihe[i].counter);

Rinnen[i].mittel:=0;
Rinnen[i].sigma:=0;                

for e:=0 to datasave.reihe[i].counter-1 do
begin
Rinnen[i].R[e]:=(datasave.Uoanfang[i]-datasave.reihe[i].Spannung[e]*((datasave.Uoanfang[i]+datasave.reihe[i].Strom[e]*diffUo[i])/datasave.Uoanfang[i]))/datasave.reihe[i].Strom[e];

Rinnen[i].mittel:=Rinnen[i].mittel+Rinnen[i].R[e];
end;                                                     //Innenwiderstand für Messreihen berechnen
Rinnen[i].mittel:=Rinnen[i].mittel/datasave.reihe[i].counter;

for e:=0 to datasave.reihe[i].counter-1 do
Rinnen[i].sigma:=Rinnen[i].sigma+sqr(Rinnen[i].R[e]-Rinnen[i].mittel);

rish[i]:=rinnen[i].sigma;

Rinnen[i].sigma:=Rinnen[i].sigma/(datasave.reihe[i].counter-1);
Rinnen[i].sigma:=sqrt(Rinnen[i].sigma);


end;

Rim:=(Rinnen[1].mittel+Rinnen[2].mittel+Rinnen[3].mittel)/3;      //Innenwiderstand für gesammten Versuch berechnen
Ris:=rish[1]+rish[2]+rish[3];
ris:=ris/(datasave.reihe[1].counter+datasave.reihe[2].counter+datasave.reihe[3].counter-1);
ris:=sqrt(ris);

relab:=0;

eff:=0;

                      
for e:=0 to 249 do
begin
mw[e]:=(datenreihe[1,e]+datenreihe[2,e]+datenreihe[3,e])/3;              //abweichung der Messreihen zueinander
sw[e]:=sqr(mw[e]-datenreihe[1,e])+sqr(mw[e]-datenreihe[2,e])+sqr(mw[e]-datenreihe[3,e]);
sw[e]:=sw[e]/2;
sw[e]:=sqrt(sw[e]);


if mw[e]<>0
then
begin
relab:=relab+(sw[e]/mw[e]);
inc(eff);
end;

end;                                          
if eff<>1
then
relab:=(relab/(eff-1));
relab:=relab*100;
end ;



Ergebnisse;

end;

procedure TForm6.Panel2Click(Sender: TObject);
var hstrom,hspann:extended;
dex:integer;
begin

if (0<>listbox1.itemindex) and (listbox1.items.count>0)
then
begin                    //Hinauf  
dex:=listbox1.itemindex;
listbox1.items.Exchange(dex,dex-1);
hstrom:=datasave.reihe[1].Strom[dex-1];
hspann:=datasave.reihe[1].Spannung[dex-1];
datasave.reihe[1].Strom[dex-1]:=datasave.reihe[1].Strom[dex];
datasave.reihe[1].Spannung[dex-1]:=datasave.reihe[1].Spannung[dex];
datasave.reihe[1].Strom[dex]:=hstrom;
datasave.reihe[1].Spannung[dex]:=hspann;
end;


end;

procedure TForm6.Panel3Click(Sender: TObject);
var hstrom,hspann:extended;
dex:integer;
begin

if (listbox1.Items.count-1<>listbox1.itemindex) and (listbox1.items.count>0)
then
begin
dex:=listbox1.itemindex;     //Abwärts
listbox1.items.Exchange(dex,dex+1);
hstrom:=datasave.reihe[1].Strom[dex+1];
hspann:=datasave.reihe[1].Spannung[dex+1];
datasave.reihe[1].Strom[dex+1]:=datasave.reihe[1].Strom[dex];
datasave.reihe[1].Spannung[dex+1]:=datasave.reihe[1].Spannung[dex];
datasave.reihe[1].Strom[dex]:=hstrom;
datasave.reihe[1].Spannung[dex]:=hspann;
end;
end;

procedure TForm6.FormClose(Sender: TObject; var Action: TCloseAction);
begin

form6.visible:=false;
form1.visible:=true;    //Ins Hauptmenü wechseln
end;

procedure TForm6.FormCloseQuery(Sender: TObject; var CanClose: Boolean);
begin

form6.visible:=false;
form1.visible:=true;    //Ins Hauptmenü wechseln
end;

procedure TForm6.Panel6Click(Sender: TObject);
var hstrom,hspann:extended;
dex:integer;
begin

if (0<>listbox2.itemindex) and (listbox2.items.count>0)
then
begin                    //Hinauf  
dex:=listbox2.itemindex;
listbox2.items.Exchange(dex,dex-1);
hstrom:=datasave.reihe[2].Strom[dex-1];
hspann:=datasave.reihe[2].Spannung[dex-1];
datasave.reihe[2].Strom[dex-1]:=datasave.reihe[2].Strom[dex];
datasave.reihe[2].Spannung[dex-1]:=datasave.reihe[2].Spannung[dex];
datasave.reihe[2].Strom[dex]:=hstrom;
datasave.reihe[2].Spannung[dex]:=hspann;
end;       


end;
procedure TForm6.Panel10Click(Sender: TObject);
var hstrom,hspann:extended;
dex:integer;
begin

if (0<>listbox3.itemindex) and (listbox3.items.count>0)
then
begin                    //Hinauf  
dex:=listbox3.itemindex;
listbox3.items.Exchange(dex,dex-1);
hstrom:=datasave.reihe[3].Strom[dex-1];
hspann:=datasave.reihe[3].Spannung[dex-1];
datasave.reihe[3].Strom[dex-1]:=datasave.reihe[3].Strom[dex];
datasave.reihe[3].Spannung[dex-1]:=datasave.reihe[3].Spannung[dex];
datasave.reihe[3].Strom[dex]:=hstrom;
datasave.reihe[3].Spannung[dex]:=hspann;
end;       


end;

procedure TForm6.Panel8Click(Sender: TObject);
var hstrom,hspann:extended;
dex:integer;
begin

if (listbox2.Items.count-1<>listbox2.itemindex) and (listbox2.items.count>0)
then
begin
dex:=listbox2.itemindex;     //Abwärts
listbox2.items.Exchange(dex,dex+1);
hstrom:=datasave.reihe[2].Strom[dex+1];
hspann:=datasave.reihe[2].Spannung[dex+1];
datasave.reihe[2].Strom[dex+1]:=datasave.reihe[2].Strom[dex];
datasave.reihe[2].Spannung[dex+1]:=datasave.reihe[2].Spannung[dex];
datasave.reihe[2].Strom[dex]:=hstrom;
datasave.reihe[2].Spannung[dex]:=hspann;
end;
end;

procedure TForm6.Panel12Click(Sender: TObject);
var hstrom,hspann:extended;
dex:integer;
begin

if (listbox3.Items.count-1<>listbox3.itemindex) and (listbox3.items.count>0)
then
begin
dex:=listbox3.itemindex;     //Abwärts
listbox3.items.Exchange(dex,dex+1);
hstrom:=datasave.reihe[3].Strom[dex+1];
hspann:=datasave.reihe[3].Spannung[dex+1];
datasave.reihe[3].Strom[dex+1]:=datasave.reihe[3].Strom[dex];
datasave.reihe[3].Spannung[dex+1]:=datasave.reihe[3].Spannung[dex];
datasave.reihe[3].Strom[dex]:=hstrom;
datasave.reihe[3].Spannung[dex]:=hspann;
end;
end;

procedure TForm6.Panel24Click(Sender: TObject);
var F:textfile;
    i,e:integer;                   //Speichern von Daten
begin
if Savedialog1.Execute
then
begin
assignfile(F,savedialog1.FileName);
rewrite(F);

datasave.Uoanfang[1]:=strtofloat(edit7.text);
datasave.Uoende[1]:=strtofloat(edit8.text);
datasave.Uoanfang[2]:=strtofloat(edit9.text);
datasave.Uoende[2]:=strtofloat(edit10.text);      //Einlesen
datasave.Uoanfang[3]:=strtofloat(edit11.text);
datasave.Uoende[3]:=strtofloat(edit12.text);


for i:=1 to 3 do
begin
writeln(F,inttostr(datasave.reihe[i].counter));
for e:=0 to datasave.reihe[i].counter-1 do
begin
writeln(F,floattostr(datasave.reihe[i].Spannung[e]));
writeln(F,floattostr(datasave.reihe[i].Strom[e]));
end;
writeln(F,floattostr(datasave.Uoanfang[i]));
writeln(F,floattostr(datasave.Uoende[i]));
end;

closefile(F);
end;

end;

procedure TForm6.Panel23Click(Sender: TObject);
var F:textfile;
    i,e:integer;
    s:string;             //Öffnen von Daten
begin
if Opendialog1.Execute
then
begin
neuewerte;
assignfile(F,opendialog1.FileName);
reset(F);

for i:=1 to 3 do
begin
readln(F,s);
datasave.reihe[i].counter:=strtoint(s);
setlength(datasave.reihe[i].spannung,datasave.reihe[i].counter);
setlength(datasave.reihe[i].strom,datasave.reihe[i].counter);
for e:=0 to datasave.reihe[i].counter-1 do
begin
readln(F,s);
datasave.reihe[i].Spannung[e]:=strtofloat(s);
readln(F,s);
datasave.reihe[i].Strom[e]:=strtofloat(s);


end;
readln(F,s);
datasave.Uoanfang[i]:=strtofloat(s);
readln(F,s);
datasave.Uoende[i]:=strtofloat(s);

end;

closefile(F);

for e:=0 to datasave.reihe[1].counter-1 do
listbox1.items.Add(floattostr(datasave.reihe[1].Spannung[e])+' - '+floattostr(datasave.reihe[1].Strom[e]));

for e:=0 to datasave.reihe[2].counter-1 do
listbox2.items.Add(floattostr(datasave.reihe[2].Spannung[e])+' - '+floattostr(datasave.reihe[2].Strom[e]));

for e:=0 to datasave.reihe[3].counter-1 do
listbox3.items.Add(floattostr(datasave.reihe[3].Spannung[e])+' - '+floattostr(datasave.reihe[3].Strom[e]));

edit7.text:=floattostr(datasave.Uoanfang[1]);
edit8.text:=floattostr(datasave.Uoende[1]);
edit9.text:=floattostr(datasave.Uoanfang[2]);
edit10.text:=floattostr(datasave.Uoende[2]);
edit11.text:=floattostr(datasave.Uoanfang[3]);
edit12.text:=floattostr(datasave.Uoende[3]);

end;

end;

procedure TForm6.Panel22Click(Sender: TObject);
begin
neuewerte;                  //Neu
end;


 procedure Tform6.neuewerte;
 var i:integer;
 begin              //reset felder
 listbox1.clear;
 listbox2.clear;
 listbox3.clear;
 spinedit1.value:=10;
 edit1.text:='';
 edit2.text:='';
 edit3.text:='';
 edit4.text:='';
 edit5.text:='';
 edit6.text:='';
 edit7.text:='';
 edit8.text:='';
 edit9.text:='';
 edit10.text:='';
 edit11.text:='';
 edit12.text:='';

for i:=1 to 3 do
begin
datasave.reihe[i].counter:=0;
setlength(datasave.reihe[i].spannung,0);
setlength(datasave.reihe[i].spannung,0);
datasave.uoanfang[i]:=0;
datasave.uoende[i]:=0;
end;

 bild.canvas.Brush.Color:=clwhite;
 bild.canvas.FillRect(rect(0,0,500,300));

 end;


procedure TForm6.Panel26Click(Sender: TObject);
begin
SavePictureDialog1.DefaultExt := GraphicExtension(Tbitmap);
SavePictureDialog1.Filter := GraphicFilter(TBitmap);
if SavePictureDialog1.Execute
then                                                  //Bild speichern
begin
bild.SaveToFile(SavePictureDialog1.FileName);
end;
end;


 procedure TForm6.Ergebnisse;
 begin                    //Ergebnisse anzeigen
 label18.caption:='Innenwiderstand der Batterie: ('+floattostr(roundto(Rinnen[1].mittel,-4))+' +- '+floattostr(roundto(Rinnen[1].sigma,-4))+') mOhm' ;
 label19.caption:='Innenwiderstand der Batterie: ('+floattostr(roundto(Rinnen[2].mittel,-4))+' +- '+floattostr(roundto(Rinnen[2].sigma,-4))+') mOhm' ;
 label20.caption:='Innenwiderstand der Batterie: ('+floattostr(roundto(Rinnen[3].mittel,-4))+' +- '+floattostr(roundto(Rinnen[3].sigma,-4))+') mOhm' ;
 label21.Caption:='Innenwiderstand der Batterie: ('+floattostr(roundto(rim,-4))+' +- '+floattostr(roundto(ris,-4))+') mOhm' ;
 label7.caption:='durchschnittliche relative Standardabweichung: '+floattostr(roundto(relab,-4))+'%';
 end;

procedure TForm6.Panel14Click(Sender: TObject);
var i:integer;
begin
                                             //Graph Messreihe 1
bild.canvas.Brush.Color:=clwhite;
bild.canvas.FillRect(rect(0,0,500,300));

bild.canvas.Pen.color:=clblack;
bild.canvas.moveto(0,250);
bild.canvas.lineto(5,250);
bild.canvas.moveto(0,175);
bild.canvas.lineto(5,175);
bild.canvas.moveto(20,300);
bild.canvas.lineto(20,295);
bild.canvas.moveto(40,300);
bild.canvas.lineto(40,295);

bild.Canvas.Pen.Color:=clred;
bild.canvas.MoveTo(0,400);

for i:=0 to datasave.reihe[1].counter-1 do
bild.canvas.LineTo(round(datasave.reihe[1].Strom[i]*2),400-round(datasave.reihe[1].Spannung[i]*((datasave.Uoanfang[1]+datasave.reihe[1].Strom[i]*diffUo[1])/datasave.Uoanfang[1])*75));

Paintbox1.Canvas.Draw(0,0,bild);
end;

procedure TForm6.Panel15Click(Sender: TObject);
var i:integer;
begin
                                             //Graph Messreihe 2
bild.canvas.Brush.Color:=clwhite;
bild.canvas.FillRect(rect(0,0,500,300));
bild.canvas.Pen.color:=clblack;
bild.canvas.moveto(0,250);
bild.canvas.lineto(5,250);
bild.canvas.moveto(0,175);
bild.canvas.lineto(5,175);
bild.canvas.moveto(20,300);
bild.canvas.lineto(20,295);
bild.canvas.moveto(40,300);
bild.canvas.lineto(40,295);
bild.Canvas.Pen.Color:=clred;
bild.canvas.MoveTo(0,300);

for i:=0 to datasave.reihe[2].counter-1 do
bild.canvas.LineTo(round(datasave.reihe[2].Strom[i]*2),400-round(datasave.reihe[2].Spannung[i]*((datasave.Uoanfang[2]+datasave.reihe[2].Strom[i]*diffUo[2])/datasave.Uoanfang[2])*75));

Paintbox1.Canvas.Draw(0,0,bild);
end;

procedure TForm6.Panel16Click(Sender: TObject);
var i:integer;
begin
                                             //Graph Messreihe 3
bild.canvas.Brush.Color:=clwhite;
bild.canvas.FillRect(rect(0,0,500,300));
bild.canvas.Pen.color:=clblack;
bild.canvas.moveto(0,250);
bild.canvas.lineto(5,250);
bild.canvas.moveto(0,175);
bild.canvas.lineto(5,175);
bild.canvas.moveto(20,300);
bild.canvas.lineto(20,295);
bild.canvas.moveto(40,300);
bild.canvas.lineto(40,295);
bild.Canvas.Pen.Color:=clred;
bild.canvas.MoveTo(0,300);

for i:=0 to datasave.reihe[3].counter-1 do
bild.canvas.LineTo(round(datasave.reihe[3].Strom[i]*2),400-round(datasave.reihe[3].Spannung[i]*((datasave.Uoanfang[3]+datasave.reihe[3].Strom[i]*diffUo[3])/datasave.Uoanfang[3])*75));

Paintbox1.Canvas.Draw(0,0,bild);
end;

procedure TForm6.Panel17Click(Sender: TObject);
var i:integer;
begin
                                              //alle 3 Graphen
bild.canvas.Brush.Color:=clwhite;
bild.canvas.FillRect(rect(0,0,500,300));
bild.canvas.Pen.color:=clblack;
bild.canvas.moveto(0,250);
bild.canvas.lineto(5,250);
bild.canvas.moveto(0,175);
bild.canvas.lineto(5,175);
bild.canvas.moveto(20,300);
bild.canvas.lineto(20,295);
bild.canvas.moveto(40,300);
bild.canvas.lineto(40,295);
bild.Canvas.Pen.Color:=clred;
bild.canvas.MoveTo(0,300);

for i:=0 to datasave.reihe[1].counter-1 do
bild.canvas.LineTo(round(datasave.reihe[1].Strom[i]*2),400-round(datasave.reihe[1].Spannung[i]*((datasave.Uoanfang[1]+datasave.reihe[1].Strom[i]*diffUo[1])/datasave.Uoanfang[1])*75));

bild.Canvas.Pen.Color:=cllime;
bild.canvas.MoveTo(0,300);

for i:=0 to datasave.reihe[2].counter-1 do
bild.canvas.LineTo(round(datasave.reihe[2].Strom[i]*2),400-round(datasave.reihe[2].Spannung[i]*((datasave.Uoanfang[2]+datasave.reihe[2].Strom[i]*diffUo[2])/datasave.Uoanfang[2])*75));

bild.Canvas.Pen.Color:=clblue;
bild.canvas.MoveTo(0,300);

for i:=0 to datasave.reihe[3].counter-1 do
bild.canvas.LineTo(round(datasave.reihe[3].Strom[i]*2),400-round(datasave.reihe[3].Spannung[i]*((datasave.Uoanfang[3]+datasave.reihe[3].Strom[i]*diffUo[3])/datasave.Uoanfang[3])*75));

Paintbox1.Canvas.Draw(0,0,bild);

end;

procedure TForm6.Panel18Click(Sender: TObject);
var i:integer;
begin
bild.canvas.Brush.Color:=clwhite;                 //mittlerer Graph
bild.canvas.FillRect(rect(0,0,500,300));
bild.canvas.Pen.color:=clblack;
bild.canvas.moveto(0,250);
bild.canvas.lineto(5,250);
bild.canvas.moveto(0,175);
bild.canvas.lineto(5,175);
bild.canvas.moveto(20,300);
bild.canvas.lineto(20,295);
bild.canvas.moveto(40,300);
bild.canvas.lineto(40,295);
bild.Canvas.Pen.Color:=clred;
bild.canvas.MoveTo(0,300);

for i:=0 to 249 do
bild.canvas.LineTo(i*2,round(400-mw[i]*75));

Paintbox1.Canvas.Draw(0,0,bild);
end;

procedure TForm6.Panel19Click(Sender: TObject);
var i:integer;
begin
bild.canvas.Brush.Color:=clwhite;                 //dicker Graph
bild.canvas.FillRect(rect(0,0,500,300));
bild.canvas.Pen.color:=clblack;
bild.canvas.moveto(0,250);
bild.canvas.lineto(5,250);
bild.canvas.moveto(0,175);
bild.canvas.lineto(5,175);
bild.canvas.moveto(20,300);
bild.canvas.lineto(20,295);
bild.canvas.moveto(40,300);
bild.canvas.lineto(40,295);
bild.Canvas.Pen.Color:=clred;
bild.canvas.MoveTo(0,300);

for i:=0 to 249 do          
begin
if mw[i]<>0
then
bild.canvas.Pen.Width:=round(sw[i]*75*2)
else
bild.canvas.Pen.width:=1;

if bild.canvas.pen.width>10
then
bild.canvas.Pen.width:=1;

bild.canvas.LineTo(i*2,round(400-mw[i]*75));
end;

bild.canvas.pen.width:=1;
                                            
Paintbox1.Canvas.Draw(0,0,bild);
end;

procedure TForm6.Panel20Click(Sender: TObject);
var i:integer;
begin
bild.canvas.Brush.Color:=clwhite;                 //Graph der relativen Standardabweichung
bild.canvas.FillRect(rect(0,0,500,300));
bild.canvas.Pen.color:=clblack;

bild.canvas.moveto(0,200);
bild.canvas.lineto(5,200);
bild.canvas.moveto(0,100);      
bild.canvas.lineto(5,100);
                                   
bild.canvas.moveto(20,300);
bild.canvas.lineto(20,295);
bild.canvas.moveto(40,300);
bild.canvas.lineto(40,295);
bild.Canvas.Pen.Color:=clred;
bild.canvas.MoveTo(0,300);

for i:=0 to 249 do
if (mw[i]<>0)
then                        
bild.canvas.LineTo(i*2,round(300-(sw[i]/mw[i]*10000)));

Paintbox1.Canvas.Draw(0,0,bild);
end;

procedure TForm6.Panel21Click(Sender: TObject);
var i:integer;
begin
bild.canvas.Brush.Color:=clwhite;                 //Graph mit Balken
bild.canvas.FillRect(rect(0,0,500,300));
bild.canvas.Pen.color:=clblack;
bild.canvas.moveto(0,250);
bild.canvas.lineto(5,250);
bild.canvas.moveto(0,175);
bild.canvas.lineto(5,175);
bild.canvas.moveto(20,300);
bild.canvas.lineto(20,295);
bild.canvas.moveto(40,300);
bild.canvas.lineto(40,295);
bild.Canvas.Pen.Color:=clred;
bild.canvas.MoveTo(0,300);

for i:=0 to 249 do
bild.canvas.LineTo(i*2,round(400-mw[i]*75));

bild.Canvas.Pen.Color:=clblue;

for i:=0 to trunc(249/spinedit1.Value) do
begin
bild.canvas.MoveTo(i*spinedit1.Value*2,round(400-(mw[i*spinedit1.Value]-sw[i*spinedit1.Value])*75));
bild.canvas.LineTo(i*spinedit1.Value*2,round(400-(mw[i*spinedit1.Value]+sw[i*spinedit1.Value])*75));
end;

Paintbox1.Canvas.Draw(0,0,bild);
end;

procedure TForm6.Panel25Click(Sender: TObject);
begin
form6.visible:=false;
form1.visible:=true;    //Ins Hauptmenü wechseln
end;

procedure TForm6.CheckBox1Click(Sender: TObject);
var i:integer;
begin                 
for i:=1 to 3 do
begin
if checkbox1.checked=true       //mit Batterieverbrauch
then
diffUo[i]:=-(datasave.Uoende[i]-datasave.Uoanfang[i])/250
else
diffUo[i]:=0;                //ohne Batterieverbrauch
end;
end;

end.




